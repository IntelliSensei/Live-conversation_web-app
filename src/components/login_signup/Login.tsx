import { gql, useMutation } from '@apollo/client'
import React, { FC, useState } from 'react'
import "../css/Login.css"



export interface ILoginProps {
  email?: string,
  password?: string
}

// Generated by https://quicktype.io

export interface LoginOutput {
  loginUser: LoginUser;
}

export interface LoginUser {
  message: string;
  token: string;
  __typename: string;
  email: string;
  password: string
}


export const LoginField: FC<ILoginProps> = ({
  email,
  password
}: ILoginProps) => {

  const [loginUser, { data, loading, error }] = useMutation<LoginOutput>(gql`
  mutation LoginUser($loginInput: LoginInput) {
    loginUser(loginInput: $loginInput) {
      message
      token
      email
      # password
    }
  }
`)



  const LoginState = () => {
    if (loading) {
      return <div>loading</div>
    }

    if (error) {
      return <div>{error.message}</div>
    }

    if (!data) {
      return <div></div>
    }

    return <div>
      {data.loginUser.message}
    </div>
  }


  const [emailValue, setEmailValue] = useState("")
  const [passwordValue, setPasswordValue] = useState("")
  // const [token, setToken] = useState("")


  return (
    <div className="login-field">
      {/* {data?.loginUser.message ? - need to figure out what this should be for the
        <> */}

          <input
            type="text"
            id='email'
            value={emailValue}
            onChange={(e) => setEmailValue(e.target.value)}
            placeholder="Email..."
          />
          <input
            type="password"
            id='password'
            value={passwordValue}
            onChange={(e) => setPasswordValue(e.target.value)}
            placeholder="Password..." />
          <button onClick={() => {
            console.log("meh");

            loginUser({
              variables: {
                loginInput: {
                  email: emailValue,
                  password: passwordValue
                }
              }
            }).then((data) => sessionStorage.setItem("token", JSON.stringify(data.data?.loginUser.token))) // should this be set after instead?
              // (data) => console.log(data)
              // sessionStorage.setItem("token", JSON.stringify(data.loginUser.token)
              // sessionStorage.setItem("token", JSON.stringify(data.data?.loginUser.token)
            console.log(data?.loginUser.token);
            console.log(sessionStorage);
          }
          }>Log In</button>
          {LoginState()}
        {/* </>
        : */}
        <>
         
        </>
      {/* } */}


    </div>
  )
}
